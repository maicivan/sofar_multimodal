#!/usr/bin/env python

import rospy
import random
import string
from std_msgs.msg import String
from sofar_multimodal.msg import *


elements = adapter()

def callback(data): 	
	
	types = ['float32','string', 'string']
	name = ['pose_2d','result', 'id']
	
	#global elements	
	elements.id_mod = 2
	
	for j in range (0,len(data.x_2d)):
		o = obj()						
		for i in range(0,len(name)):
			f = feature()
			f.name = name[i]
			f.types = types[i]
			if name[i] == 'pose_2d':
				f.value.append(str(data.x_2d[j]))
				f.value.append(str(data.y_2d[j]))
			if name[i] == 'result':
				f.value.append(data.result[j])
			if name[i] == 'id':
				#id_generetor = ''.join([random.choice(string.ascii_letters + string.digits) for n in range(32)])
				id_generetor =str(random.uniform(10,100))
				f.value.append(id_generetor)
			o.obj.append(f)
		elements.adap.append(o)

if __name__ == '__main__':	
	rospy.init_node('adapterTensor', anonymous=True)
	rospy.Subscriber('TensorChannel', TensorOutput, callback)
	pub=rospy.Publisher('outputAdapterTensor', adapter, queue_size=1)
	rate=rospy.Rate(10)
	while not rospy.is_shutdown():
		pub.publish(elements)
		elements.adap[:]=[]
		rate.sleep()